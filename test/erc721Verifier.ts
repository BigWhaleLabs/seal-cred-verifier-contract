import { expect } from 'chai'
import { ethers } from 'hardhat'

const validProof = {
  a: [
    '0x2bb564b14c6c5b30dd8269cdecf1e46735099b26d0f3fc8f97867c09ba067339',
    '0x0d3928578837c85cbb192b6f98fa52895c30f16aa5c74832cc0dd287bf0365d8',
  ],
  b: [
    [
      '0x25d4258c87571d75186ddea6636b2b8ededc2a22f070f1855e0a8de9abfdbe71',
      '0x1a26b3f758c43b7168e5e32b68de1842ef6ddc62665c327eb4516f7dd9602268',
    ],
    [
      '0x21d7d894f54eb242261619243334940d89ff69ac6d0c0c208b86617fe5ebd56b',
      '0x2e897e647eabb683a8bd36acde102456d10a2b0c4aa42dc0b339170b84cccae7',
    ],
  ],
  c: [
    '0x28bd31b7d5eb2a8db95c2bb64dabdf9c4d38c5d25b8ff0c333446ee74325310a',
    '0x1e20a1401a118af5124efe559a16c4cf21d5ec9b1c3b9db76b3342bc1476f7f1',
  ],
  input: [
    '0x0d8dc56d4e7557c3ed91898c8cda3844848ac20cb9c9f423f5fae3c4b73e713b',
    '0x0000000000000000000000000000000000000000000000000000000000000030',
    '0x0000000000000000000000000000000000000000000000000000000000000078',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000030',
    '0x0000000000000000000000000000000000000000000000000000000000000036',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000036',
    '0x0000000000000000000000000000000000000000000000000000000000000046',
    '0x0000000000000000000000000000000000000000000000000000000000000034',
    '0x0000000000000000000000000000000000000000000000000000000000000035',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000061',
    '0x0000000000000000000000000000000000000000000000000000000000000046',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000031',
    '0x0000000000000000000000000000000000000000000000000000000000000033',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000034',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000039',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000061',
    '0x0000000000000000000000000000000000000000000000000000000000000038',
    '0x0000000000000000000000000000000000000000000000000000000000000041',
    '0x0000000000000000000000000000000000000000000000000000000000000034',
    '0x0000000000000000000000000000000000000000000000000000000000000044',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000038',
    '0x0000000000000000000000000000000000000000000000000000000000000038',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000041',
    '0x0000000000000000000000000000000000000000000000000000000000000031',
    '0x0000000000000000000000000000000000000000000000000000000000000035',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000063',
    '0x0000000000000000000000000000000000000000000000000000000000000036',
    '0x0ac878536cc194714e665549cb408816c390908785da1d9bc4b0e57770b1f5b5',
  ],
}
const invalidProof = {
  a: validProof.a,
  b: validProof.b,
  c: [
    '0x184b074c1fac82c2dda436071d098edb4a2955343721ef642e6b844e40a50cc0',
    '0x1e11078629c2031c0eb203d84f745e423440ed52091d06ece6020cd5674fda5f',
  ],
  input: validProof.input,
}

describe('ERC721OwnershipCheckerVerifier contract', function () {
  before(async function () {
    const factory = await ethers.getContractFactory(
      'ERC721OwnershipCheckerVerifier'
    )
    this.contract = await factory.deploy()

    await this.contract.deployed()
  })

  it('should successfully verify correct proof', async function () {
    const { a, b, c, input } = validProof
    const params = [a, b, c, input]
    expect(await this.contract.verifyProof(...params)).to.be.equal(true)
  })

  it('should fail to verify incorrect proof', async function () {
    const { a, b, c, input } = invalidProof

    expect(await this.contract.verifyProof(a, b, c, input)).to.be.equal(false)
  })
})
