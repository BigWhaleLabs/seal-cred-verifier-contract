import { expect } from 'chai'
import { ethers } from 'hardhat'

const validProof = {
  a: [
    '0x28fed199e11733331fd32c568edb3464dbea3ad1339c37fd66c0110467c73387',
    '0x2673e733a2b1cff4192973d8000f44d6ebf338e15761132a6513afdbdf524708',
  ],
  b: [
    [
      '0x050ae7726fe6ceb7bfc70f912a9182385f8970db29bf7aea9568fe0b62e5f262',
      '0x014c94fc7e3a56b51bc532cfa1781306c7f6180ef622d122b2c19e6b3c47a20b',
    ],
    [
      '0x1eb90fc6fba93a0bf2e942ed75e50fa4d9f2d57acbcb2c60996c7577a43c7c52',
      '0x0f2c8f0c36b4f2b2c0eab92bc5b5c3adde5c38aad5cfbc60a135cd2240a581d1',
    ],
  ],
  c: [
    '0x184b074c1fac82c2dda436071d098edb4a2955343721ef642e6b844e40a50cc0',
    '0x1e11078629c2031c0eb203d84f745e423440ed52091d06ece6020cd5674fda5f',
  ],
  input: [
    '0x0000000000000000000000000000000000000000000000000000000000001384',
    '0x0000000000000000000000000000000000000000000000000000000000000030',
    '0x0000000000000000000000000000000000000000000000000000000000000078',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000030',
    '0x0000000000000000000000000000000000000000000000000000000000000036',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000036',
    '0x0000000000000000000000000000000000000000000000000000000000000046',
    '0x0000000000000000000000000000000000000000000000000000000000000034',
    '0x0000000000000000000000000000000000000000000000000000000000000035',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000061',
    '0x0000000000000000000000000000000000000000000000000000000000000046',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000031',
    '0x0000000000000000000000000000000000000000000000000000000000000033',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000034',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x0000000000000000000000000000000000000000000000000000000000000039',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000061',
    '0x0000000000000000000000000000000000000000000000000000000000000038',
    '0x0000000000000000000000000000000000000000000000000000000000000041',
    '0x0000000000000000000000000000000000000000000000000000000000000034',
    '0x0000000000000000000000000000000000000000000000000000000000000044',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x0000000000000000000000000000000000000000000000000000000000000038',
    '0x0000000000000000000000000000000000000000000000000000000000000038',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000041',
    '0x0000000000000000000000000000000000000000000000000000000000000031',
    '0x0000000000000000000000000000000000000000000000000000000000000035',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000032',
    '0x0000000000000000000000000000000000000000000000000000000000000063',
    '0x0000000000000000000000000000000000000000000000000000000000000036',
    '0x1e05243c47d00d8087c7c6a176afe38a47b9bcea0e01d5a7db66260e551516d7',
  ],
}
const invalidProof = {
  a: validProof.a,
  b: validProof.b,
  c: [
    '0x030136c4a083bef72c090bfc95f860abd50d6a0fb369690d8c18e344007b0784',
    '0x0c98cad99f5ca1a87907e7852add432668a4de09afe0f726650e4f42bb63e14d',
  ],
  input: validProof.input,
}

describe('Verifier contract', function () {
  before(async function () {
    const factory = await ethers.getContractFactory('Verifier')
    this.contract = await factory.deploy()

    await this.contract.deployed()
  })

  it('should successfully verify correct proof', async function () {
    const { a, b, c, input } = validProof
    const params = [a, b, c, input]
    expect(await this.contract.verifyProof(...params)).to.be.equal(true)
  })

  it('should fail to verify incorrect proof', async function () {
    const { a, b, c, input } = invalidProof

    expect(await this.contract.verifyProof(a, b, c, input)).to.be.equal(false)
  })
})
