import { expect } from 'chai'
import { ethers } from 'hardhat'

const validProof = {
  a: [
    '0x25c081a9c2d68a7517d6e64ec6d47372dd1b2714d7bc319357e1e2c444c3c123',
    '0x111e5862c18975b82f4b8ca47dcac7a48e7f859a61b41ff12e1bba694dd590bc',
  ],
  b: [
    [
      '0x2cea837397ede8326cf03ec7d62a0ef0c9a36c4008673be94af024a9471db2e8',
      '0x0f15f5b6f4810a71af6448bd74ffd919eb54a6731ae9ef73fb79401dedbc51de',
    ],
    [
      '0x0aff23e1793faeacc105e2c91e52986f4b93974a44fac9077fd22d73bfa54e00',
      '0x2f43d68e3a18956cfd1950631f27e728dfd0a91e21f3881e6fc21896a9def629',
    ],
  ],
  c: [
    '0x129dee33f38924a93738dc4a64f83f1a4f0a63fb5116d86f18a07a82307e1c74',
    '0x0abb5b815ef35471a2337367ba3cc940e2da796275196be9026636dae11122be',
  ],
  input: [
    '0x0000000000000000000000000000000000000000000000000000000000000044',
    '0x0000000000000000000000000000000000000000000000000000000000000051',
    '0x000000000000000000000000000000000000000000000000000000000000004e',
    '0x0000000000000000000000000000000000000000000000000000000000000066',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x000000000000000000000000000000000000000000000000000000000000004c',
    '0x0000000000000000000000000000000000000000000000000000000000000047',
    '0x0000000000000000000000000000000000000000000000000000000000000042',
    '0x0000000000000000000000000000000000000000000000000000000000000039',
    '0x000000000000000000000000000000000000000000000000000000000000004e',
    '0x0000000000000000000000000000000000000000000000000000000000000066',
    '0x0000000000000000000000000000000000000000000000000000000000000037',
    '0x000000000000000000000000000000000000000000000000000000000000006d',
    '0x000000000000000000000000000000000000000000000000000000000000004e',
    '0x0000000000000000000000000000000000000000000000000000000000000062',
    '0x0000000000000000000000000000000000000000000000000000000000000069',
    '0x0000000000000000000000000000000000000000000000000000000000000067',
    '0x0000000000000000000000000000000000000000000000000000000000000077',
    '0x0000000000000000000000000000000000000000000000000000000000000068',
    '0x0000000000000000000000000000000000000000000000000000000000000061',
    '0x000000000000000000000000000000000000000000000000000000000000006c',
    '0x0000000000000000000000000000000000000000000000000000000000000065',
    '0x000000000000000000000000000000000000000000000000000000000000006c',
    '0x0000000000000000000000000000000000000000000000000000000000000061',
    '0x0000000000000000000000000000000000000000000000000000000000000062',
    '0x0000000000000000000000000000000000000000000000000000000000000073',
    '0x000000000000000000000000000000000000000000000000000000000000002e',
    '0x0000000000000000000000000000000000000000000000000000000000000063',
    '0x000000000000000000000000000000000000000000000000000000000000006f',
    '0x000000000000000000000000000000000000000000000000000000000000006d',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x0000000000000000000000000000000000000000000000000000000000000000',
    '0x1e05243c47d00d8087c7c6a176afe38a47b9bcea0e01d5a7db66260e551516d7',
  ],
}
const invalidProof = {
  a: validProof.a,
  b: validProof.b,
  c: [
    '0x184b074c1fac82c2dda436071d098edb4a2955343721ef642e6b844e40a50cc0',
    '0x1e11078629c2031c0eb203d84f745e423440ed52091d06ece6020cd5674fda5f',
  ],
  input: validProof.input,
}

describe('EmailOwnershipCheckerVerifier contract', function () {
  before(async function () {
    const factory = await ethers.getContractFactory(
      'EmailOwnershipCheckerVerifier'
    )
    this.contract = await factory.deploy()

    await this.contract.deployed()
  })

  it('should successfully verify correct proof', async function () {
    const { a, b, c, input } = validProof
    const params = [a, b, c, input]
    expect(await this.contract.verifyProof(...params)).to.be.equal(true)
  })

  it('should fail to verify incorrect proof', async function () {
    const { a, b, c, input } = invalidProof

    expect(await this.contract.verifyProof(a, b, c, input)).to.be.equal(false)
  })
})
